version: "2.2"

services:
  webknossos:
    image: scalableminds/webknossos:${DOCKER_TAG:-23.04.0}
    ports:
      - "127.0.0.1:9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
      fossildb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:
      - -Dconfig.file=conf/application.conf
      - -Djava.net.preferIPv4Stack=true
      - -Dtracingstore.fossildb.address=fossildb
      - -Dtracingstore.redis.address=redis
      - -Ddatastore.redis.address=redis
      - -Dslick.db.url=jdbc:postgresql://postgres/webknossos
      - -DwebKnossos.sampleOrganization.enabled=false
      - -Dtracingstore.publicUri=https://${PUBLIC_HOST}
      - -Ddatastore.publicUri=https://${PUBLIC_HOST}
    volumes:
      - ./binaryData:/webknossos/binaryData
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
      - VIRTUAL_HOST=${PUBLIC_HOST}
      - LETSENCRYPT_HOST=${PUBLIC_HOST}
    user: ${USER_UID:-1000}:${USER_GID:-1000}
    networks:
      - webknossos_default

  # Postgres
  postgres:
    image: postgres:15-bullseye
    environment:
      POSTGRES_DB: webknossos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1 -p 5432"]
      interval: 2s
      timeout: 5s
      retries: 30
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "./persistent/postgres:/var/lib/postgresql/data/"

  psql:
    extends: postgres
    command: psql -h postgres -U postgres webknossos
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres

  # FossilDB
  fossildb:
    image: scalableminds/fossildb:master__489
    container_name: webknossos-fossildb-1
    command:
      - fossildb
      - -c
      - skeletons,skeletonUpdates,volumes,volumeData,volumeUpdates,volumeSegmentIndex,editableMappings,editableMappingUpdates,editableMappingsInfo,editableMappingsAgglomerateToGraph,editableMappingsSegmentToAgglomerate
    user: 0:0
    volumes:
      - "./persistent/fossildb/data:/fossildb/data"
      - "./persistent/fossildb/backup:/fossildb/backup"

  # Redis
  redis:
    image: redis:7
    command:
      - redis-server
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
      timeout: 1s
      interval: 5s
      retries: 10

  # Nginx
  nginx:
    image: scalableminds/nginx-proxy:master__4605879364
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./persistent/nginx/certs:/etc/nginx/certs
      - ./persistent/nginx/vhost.d:/etc/nginx/vhost.d
      - ./persistent/nginx/html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  # Nginx-Lets-Encrypt
  nginx-letsencrypt:
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./persistent/nginx/certs:/etc/nginx/certs
      - ./persistent/nginx/vhost.d:/etc/nginx/vhost.d
      - ./persistent/nginx/html:/usr/share/nginx/html

  # FossilDB Backup -- backup located to ../persistent/fossildb/backup/private after completion
  # Example command: docker-compose run --rm fossil-db-backup
  fossil-db-backup:
    image: scalableminds/fossildb-client:master
    depends_on:
      fossildb:
        condition: service_healthy
    command: ["webknossos-fossildb-1", "backup"]
    networks:
      - webknossos_default

  # FossilDB Restore
  # Example command: docker-compose run --rm fossil-db-restore
  fossil-db-restore:
    image: scalableminds/fossildb-client:master
    depends_on:
      fossildb:
        condition: service_healthy
    command: [ "webknossos-fossildb-1", "restore" ]
    networks:
      - webknossos_default

  # Postgres backup
  postgres-backup:
    image: postgres
    command: [ "/bin/bash", "-c", "PGPASSWORD=postgres pg_dump -Fc -h postgres -U postgres webknossos | gzip > /backups/backup_$(date +%Y-%m-%d_%H-%M).sql.gz" ]
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres

# Explicitly declare networks for fossil-db-backup connectivity
networks:
  webknossos_default:
    external: true
